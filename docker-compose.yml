version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    # image: postgres:17-alpine
    image: postgres:latest
    container_name: todo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: slack_todo_db
      POSTGRES_USER: todo_user
      POSTGRES_PASSWORD: todo_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./cf-backend/schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo_user -d slack_todo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./cf-backend
      dockerfile: Dockerfile
    container_name: todo-backend
    restart: unless-stopped
    environment:
      DB_USER: todo_user
      DB_PASSWORD: todo_password
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: slack_todo_db
      JWT_SECRET: your_super_secret_key_for_jwt_change_this_in_production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./cf-backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend with Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: todo-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data:
